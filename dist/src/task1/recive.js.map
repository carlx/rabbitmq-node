{"version":3,"sources":["../../../src/task1/recive.js"],"names":["connect","err","conn","createChannel","ch","q","assertQueue","durable","console","log","consume","msg","content","toString","noAck"],"mappings":";;AAAA;;;;;;AAEA,uBAAKA,OAAL,CAAa,kBAAb,EAAiC,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACjDA,SAAKC,aAAL,CAAmB,UAASF,GAAT,EAAcG,EAAd,EAAkB;AACjC,YAAMC,IAAI,OAAV;;AAEAD,WAAGE,WAAH,CAAeD,CAAf,EAAkB,EAACE,SAAS,KAAV,EAAlB;AACAC,gBAAQC,GAAR,CAAY,uDAAZ,EAAqEJ,CAArE;AACAD,WAAGM,OAAH,CAAWL,CAAX,EAAc,UAASM,GAAT,EAAc;AACxBH,oBAAQC,GAAR,CAAY,kBAAZ,EAAgCE,IAAIC,OAAJ,CAAYC,QAAZ,EAAhC;AACH,SAFD,EAEG,EAACC,OAAO,IAAR,EAFH;AAGH,KARD;AASH,CAVD","file":"recive.js","sourcesContent":["import amqp from 'amqplib/callback_api';\n\namqp.connect('amqp://localhost', function(err, conn) {\n    conn.createChannel(function(err, ch) {\n        const q = 'hello';\n\n        ch.assertQueue(q, {durable: false});\n        console.log(\" [*] Waiting for messages in %s. To exit press CTRL+C\", q);\n        ch.consume(q, function(msg) {\n            console.log(\" [x] Received %s\", msg.content.toString());\n        }, {noAck: true});\n    });\n});"]}