{"version":3,"sources":["../../../src/task2/worker.js"],"names":["connect","err","conn","createChannel","channel","queueName","assertQueue","durable","prefetch","consume","msg","secs","content","toString","split","length","console","log","setTimeout","ack","noAck"],"mappings":";;AAAA;;;;;;AAEA,uBAAKA,OAAL,CAAa,kBAAb,EAAiC,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACjDA,SAAKC,aAAL,CAAmB,UAASF,GAAT,EAAcG,OAAd,EAAuB;AACtC,YAAMC,YAAY,YAAlB;AACAD,gBAAQE,WAAR,CAAoBD,SAApB,EAA+B,EAACE,SAAS,IAAV,EAA/B;;AAEA;AACA;AACA;AACA;AACAH,gBAAQI,QAAR,CAAiB,CAAjB;;AAEAJ,gBAAQK,OAAR,CAAgBJ,SAAhB,EAA2B,UAASK,GAAT,EAAc;AACrC,gBAAMC,OAAOD,IAAIE,OAAJ,CAAYC,QAAZ,GAAuBC,KAAvB,CAA6B,GAA7B,EAAkCC,MAAlC,GAA2C,CAAxD;;AAEAC,oBAAQC,GAAR,CAAY,kBAAZ,EAAgCP,IAAIE,OAAJ,CAAYC,QAAZ,EAAhC;AACAK,uBAAW,YAAW;AAClBF,wBAAQC,GAAR,CAAY,WAAZ;AACAb,wBAAQe,GAAR,CAAYT,GAAZ,EAFkB,CAEA;AACrB,aAHD,EAGGC,OAAO,IAHV;AAIH,SARD,EAQG,EAACS,OAAO,KAAR,EARH,EAVsC,CAkBlB;AACvB,KAnBD;AAoBH,CArBD","file":"worker.js","sourcesContent":["import amqp from 'amqplib/callback_api';\n\namqp.connect('amqp://localhost', function(err, conn) {\n    conn.createChannel(function(err, channel) {\n        const queueName = 'task_queue';\n        channel.assertQueue(queueName, {durable: true});\n\n        // In order to defeat that we can use the prefetch method with the value of 1.\n        // This tells RabbitMQ not to give more than one message to a worker at a time.\n        // Or, in other words, don't dispatch a new message to a worker until it has processed and acknowledged the previous one.\n        // Instead, it will dispatch it to the next worker that is not still busy.\n        channel.prefetch(1);\n\n        channel.consume(queueName, function(msg) {\n            const secs = msg.content.toString().split('.').length - 1;\n\n            console.log(\" [x] Received %s\", msg.content.toString());\n            setTimeout(function() {\n                console.log(\" [x] Done\");\n                channel.ack(msg); //confirm processing completion\n            }, secs * 1000);\n        }, {noAck: false}); //confirm that message was processed\n    });\n});"]}